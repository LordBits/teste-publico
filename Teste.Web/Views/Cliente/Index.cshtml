@model Teste.Web.Models.ViewModels.PagedResult<Teste.Web.Models.ClienteModel>
@using Teste.Web.Helpers

@{
    ViewData["Title"] = "Clientes";
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2>Clientes</h2>
        <a href="@Url.Action("create", "cliente")" class="btn btn-primary">
            <i class="bi bi-plus-lg"></i> Adicionar Cliente
        </a>
    </div>

    <div class="row">
        <div class="col-lg-12">
            @if (TempData["Message"] != null)
            {
                var alertType = TempData["tipoAlert"] ?? "success";
                <div class="alert alert-@alertType">@TempData["Message"]</div>
            }
        </div>
    </div>

    <table class="table table-hover table-striped">
        <thead class="table-dark">
            <tr>
                <th class="text-center align-middle">Código</th>
                <th class="text-center align-middle">Nome</th>
                <th class="text-center align-middle">Fantasia</th>
                <th class="text-center align-middle">Documento</th>
                <th class="text-center align-middle">Endereço</th>
                <th class="text-center align-middle">Ações</th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null && Model.Items != null)
            {
                foreach (var cliente in Model.Items)
                {
                    <tr>
                        <td class="text-center align-middle">@cliente.Codigo</td>
                        <td class="text-center align-middle">@cliente.Nome</td>
                        <td class="text-center align-middle">@cliente.Fantasia</td>
                        <td class="text-center align-middle">@cliente.Documento.FormatarDocumento()</td>
                        <td class="text-center align-middle">@cliente.Endereco</td>
                        <td class="text-center align-middle">
                            <div class="dropdown">
                                <button class="btn btn-secondary btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown"
                                    aria-expanded="false">
                                    Opções
                                </button>
                                <ul class="dropdown-menu">
                                    <li>
                                        <a class="dropdown-item" href="javascript:void(0);"
                                            onclick="visualizarCliente(@cliente.Codigo)">
                                            <i class="bi bi-eye"></i> Visualizar
                                        </a>
                                    </li>
                                    <li>
                                        <a class="dropdown-item"
                                            href="@Url.Action("edit", "cliente", new { id = cliente.Codigo })">
                                            <i class="bi bi-pencil"></i> Editar
                                        </a>
                                    </li>
                                    <li>
                                        <a class="dropdown-item text-danger" href="javascript:void(0);"
                                            onclick="confirmarDelete(@cliente.Codigo)">
                                            <i class="bi bi-trash"></i> Deletar
                                        </a>
                                    </li>
                                </ul>
                            </div>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="6" class="text-center text-muted">Nenhum cliente encontrado.</td>
                </tr>
            }
        </tbody>
    </table>

    @{
        int maxPagesToShow = 5;
        int startPage = Model!.PageNumber - maxPagesToShow / 2;
        if (startPage < 1) startPage = 1;
        int endPage = startPage + maxPagesToShow - 1;
        if (endPage > Model.TotalPages)
        {
            endPage = Model.TotalPages;
            startPage = endPage - maxPagesToShow + 1 > 0 ? endPage - maxPagesToShow + 1 : 1;
        }
    }

    <div class="d-flex justify-content-between align-items-center mt-3">
        <!-- Dropdown de Itens por página -->
        <form method="get" asp-action="Index" class="d-flex align-items-center">
            <label for="pageSize" class="me-2">Itens por página:</label>
            <select name="pageSize" id="pageSize" class="form-select form-select-sm w-auto me-2"
                onchange="this.form.submit()">
                @foreach (var size in new[] { 5, 10, 25, 50 })
                {
                    <option value="@size" selected="@(Model.PageSize == size ? "selected" : null)">@size</option>
                }
            </select>
            <input type="hidden" name="pageNumber" value="1" />
        </form>

        <!-- Paginação -->
        <nav>
            <ul class="pagination justify-content-center mb-0">
                <li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
                    <a class="page-link"
                        href="@(Model.PageNumber == 1 ? "#" : Url.Action("Index", new { pageNumber = 1, pageSize = Model.PageSize }))"
                        aria-label="Primeira">
                        <i class="bi bi-chevron-bar-left"></i>
                    </a>
                </li>

                <li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
                    <a class="page-link"
                        href="@(Model.PageNumber == 1 ? "#" : Url.Action("Index", new { pageNumber = Model.PageNumber - 1, pageSize = Model.PageSize }))"
                        aria-label="Anterior">
                        <i class="bi bi-chevron-left"></i>
                    </a>
                </li>

                @for (int i = startPage; i <= endPage; i++)
                {
                    <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                        <a class="page-link"
                            href="@Url.Action("Index", new { pageNumber = i, pageSize = Model.PageSize })">@i</a>
                    </li>
                }

                <li class="page-item @(Model.PageNumber == Model.TotalPages ? "disabled" : "")">
                    <a class="page-link"
                        href="@(Model.PageNumber == Model.TotalPages ? "#" : Url.Action("Index", new { pageNumber = Model.PageNumber + 1, pageSize = Model.PageSize }))"
                        aria-label="Próximo">
                        <i class="bi bi-chevron-right"></i>
                    </a>
                </li>

                <li class="page-item @(Model.PageNumber == Model.TotalPages ? "disabled" : "")">
                    <a class="page-link"
                        href="@(Model.PageNumber == Model.TotalPages ? "#" : Url.Action("Index", new { pageNumber = Model.TotalPages, pageSize = Model.PageSize }))"
                        aria-label="Última">
                        <i class="bi bi-chevron-bar-right"></i>
                    </a>
                </li>
            </ul>
        </nav>
    </div>

    <!-- Modal -->
    <div class="modal fade" id="modalCliente" tabindex="-1" aria-labelledby="modalClienteLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content" id="modalContent">
                <!-- Conteúdo carregado via AJAX -->
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="~/js/cliente-controller.js" asp-append-version="true"></script>
}