@model Teste.Web.Models.ViewModels.PagedResult<Teste.Web.Models.Cliente>

@{
    ViewData["Title"] = "Clientes";
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2>Clientes</h2>
        <a href="@Url.Action("Create", "Cliente")" class="btn btn-primary">
            <i class="bi bi-plus-lg"></i> Adicionar Cliente
        </a>
    </div>

    <table class="table table-striped table-hover">
        <thead class="table-dark">
            <tr>
                <th>Código</th>
                <th>Nome</th>
                <th>Fantasia</th>
                <th>Documento</th>
                <th>Endereço</th>
                <th>Ações</th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null && Model.Items != null)
            {
                foreach (var cliente in Model.Items)
                {
                    <tr>
                        <td>@cliente.Codigo</td>
                        <td>@cliente.Nome</td>
                        <td>@cliente.Fantasia</td>
                        <td>@cliente.Documento</td>
                        <td>@cliente.Endereco</td>
                        <td>
                            <div class="dropdown">
                                <button class="btn btn-secondary btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown"
                                    aria-expanded="false">
                                    Opções
                                </button>
                                <ul class="dropdown-menu">
                                    <li>
                                        <a class="dropdown-item"
                                            href="@Url.Action("Details", "Cliente", new { id = cliente.Codigo })">
                                            <i class="bi bi-eye"></i> Visualizar
                                        </a>
                                    </li>
                                    <li>
                                        <a class="dropdown-item"
                                            href="@Url.Action("Edit", "Cliente", new { id = cliente.Codigo })">
                                            <i class="bi bi-pencil"></i> Editar
                                        </a>
                                    </li>
                                    <li>
                                        <a class="dropdown-item text-danger"
                                            href="@Url.Action("Delete", "Cliente", new { id = cliente.Codigo })">
                                            <i class="bi bi-trash"></i> Deletar
                                        </a>
                                    </li>
                                </ul>
                            </div>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="6" class="text-center text-muted">Nenhum cliente encontrado.</td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Paginação -->
    @{
    int maxPagesToShow = 5;
    int startPage = Model!.PageNumber - maxPagesToShow / 2;
    if (startPage < 1) startPage = 1;
    int endPage = startPage + maxPagesToShow - 1;
    if (endPage > Model.TotalPages)
    {
        endPage = Model.TotalPages;
        startPage = endPage - maxPagesToShow + 1 > 0 ? endPage - maxPagesToShow + 1 : 1;
    }
}

<nav>
    <ul class="pagination justify-content-center">
        <!-- Primeira página -->
        <li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
            <a class="page-link" href="@(Model.PageNumber == 1 ? "#" : Url.Action("Index", new { pageNumber = 1, pageSize = Model.PageSize }))" aria-label="Primeira">
                <i class="bi bi-chevron-bar-left"></i>
            </a>
        </li>

        <!-- Anterior -->
        <li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
            <a class="page-link" href="@(Model.PageNumber == 1 ? "#" : Url.Action("Index", new { pageNumber = Model.PageNumber - 1, pageSize = Model.PageSize }))" aria-label="Anterior">
                <i class="bi bi-chevron-left"></i>
            </a>
        </li>

        <!-- Páginas numeradas -->
        @for (int i = startPage; i <= endPage; i++)
        {
            <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                <a class="page-link" href="@Url.Action("Index", new { pageNumber = i, pageSize = Model.PageSize })">@i</a>
            </li>
        }

        <!-- Próximo -->
        <li class="page-item @(Model.PageNumber == Model.TotalPages ? "disabled" : "")">
            <a class="page-link" href="@(Model.PageNumber == Model.TotalPages ? "#" : Url.Action("Index", new { pageNumber = Model.PageNumber + 1, pageSize = Model.PageSize }))" aria-label="Próximo">
                <i class="bi bi-chevron-right"></i>
            </a>
        </li>

        <!-- Última página  -->
        <li class="page-item @(Model.PageNumber == Model.TotalPages ? "disabled" : "")">
            <a class="page-link" href="@(Model.PageNumber == Model.TotalPages ? "#" : Url.Action("Index", new { pageNumber = Model.TotalPages, pageSize = Model.PageSize }))" aria-label="Última">
                <i class="bi bi-chevron-bar-right"></i>
            </a>
        </li>
</div>